*** 容器 CPU 配额限制
**** 申请 CPU -> 最大CPU
=round(exp(-3.1*x)*4*x+x, 1)=
- x: 申请CPU
- round: 四舍五入

#+BEGIN_SRC python
  import math
  def compute_cpu(x):
      return round(x+math.exp(-3.1*x)*4*x,1)

  r = [("request", "max")]
  for i in [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.0,2.5,2.9]:
       r.append((i , compute_cpu(i)))
  return r 
#+END_SRC

#+RESULTS:
| request | max |
|     0.1 | 0.4 |
|     0.2 | 0.6 |
|     0.3 | 0.8 |
|     0.4 | 0.9 |
|     0.5 | 0.9 |
|     0.6 | 1.0 |
|     0.7 | 1.0 |
|     0.8 | 1.1 |
|     0.9 | 1.1 |
|     1.0 | 1.2 |
|     1.1 | 1.2 |
|     1.2 | 1.3 |
|     1.3 | 1.4 |
|     1.4 | 1.5 |
|     1.5 | 1.6 |
|     1.6 | 1.6 |
|     1.7 | 1.7 |
|     1.8 | 1.8 |
|     1.9 | 1.9 |
|     2.0 | 2.0 |
|     2.5 | 2.5 |
|     2.9 | 2.9 |

**** 以下脚本用于查询某个节点容器的 CPU shares，period，quota 值
#+BEGIN_SRC bash
  # cpu_stat.sh
  get_container_id() {
      echo $1 | awk '{split($0, a, "/"); print a[7]}'
  }
  for dir in $(ls -d /sys/fs/cgroup/cpu,cpuacct/docker/*/); do
      share=$(cat $(printf "%scpu.shares" $dir))
      period=$(cat $(printf "%scpu.cfs_period_us" $dir))
      quota=$(cat $(printf "%scpu.cfs_quota_us" $dir))
      echo $(get_container_id $dir) $share $period $quota
  done
#+END_SRC

- 使用 =orgalorg= 来查询所有节点的情况
#+BEGIN_SRC 
HOST_PREFIX=terminus-y-private
cat /etc/hosts | grep -E $HOST_PREFIX | awk '{print $1}' | orgalorg -s -x -i cpu_stat.sh -C bash
#+END_SRC


*** 系统进程 CPU 配额
目前暂定    
[[Q.org]]



